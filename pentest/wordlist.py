#!/usr/bin/python3
import re

class Wordlist():
    """Functionality for wordlist files used in pentesting."""
    def __init__(self, filename, extension=None):
        self._filename = filename
        self._extension = extension
        self._words = []
        self._unformatted = []
        self._create_wordlist()

    @property
    def words(self):
        """Get method that returns file as a list."""
        return self._words

    @words.setter
    def words(self, filename):
        """Set method to set new wordlist file."""
        self._filename = filename
        self._unformatted = []
        self._words = []
        self._extension = None
        self._create_wordlist()

    def _create_wordlist(self):
        """Opens and reads wordlist file into list."""
        with open(self._filename, 'r') as file:
            self._unformatted = file.readlines()
            self._format()

    def _format(self):
        """Format each list entry, adds an extension if provided to object."""
        for word in self._unformatted:
            word = word.strip().strip("\n")
            if word == '': continue
            if self._extension is not None:
                if "." not in word or "." == word[0]:
                    self._words.append(word + self._extension)
                else:
                    exp = re.compile('\.[a-zA-Z0-9]+$')
                    self._words.append(exp.sub(self._extension, word))
            else:
                self._words.append(word)

    def divide_words(self, N):
        """Splits wordlist into N wordlists."""
        sublist_length = len(self._words) // N
        return [self._words[i:i+sublist_length] for i in range(0, len(self._words), sublist_length)]

